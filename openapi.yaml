openapi: 3.0.0
info:
  title: eBay Tool API
  description: This API provides access to user, buyer, and order data.
  version: "1.0.0"
servers:
  - url: https://api.yourdomain.com/v1
    description: Production server

paths:
  /users:
    post:
      summary: Create a new user
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    get:
      summary: List all users
      tags:
        - Users
      responses:
        '200':
          description: An array of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /users/{userId}:
    get:
      summary: Retrieve a user by ID
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detailed information of a user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    patch:
      summary: Update an existing user
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      summary: Delete a user
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: User deleted successfully

  /users/login:
    post:
      summary: User login
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /users/logout:
    post:
      summary: User logout
      tags:
        - Users
      responses:
        '200':
          description: Logout successful

  /buyers:
    post:
      summary: Create a new buyer
      tags:
        - Buyers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Buyer'
      responses:
        '201':
          description: Buyer created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Buyer'

  /buyers/{buyerId}:
    patch:
      summary: Update an existing buyer
      tags:
        - Buyers
      parameters:
        - name: buyerId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Buyer'
      responses:
        '200':
          description: Buyer updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Buyer'
    delete:
      summary: Disable a buyer (optional)
      description: "Optionally provide a way to disable a buyer instead of deleting from database."
      tags:
        - Buyers
      parameters:
        - name: buyerId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Buyer disabled successfully

  /orders:
    get:
      summary: List all orders
      operationId: listOrders
      tags:
        - Orders
      responses:
        '200':
          description: A list of orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'

  /items:
    get:
      summary: List all items in an order
      operationId: listItems
      tags:
        - Items
      responses:
        '200':
          description: A list of items
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Item'

  /messages:
    post:
      summary: Create a new message
      tags:
        - Messages
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        '201':
          description: Message created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'

  /messages/{messageId}:
    get:
      summary: Retrieve a message
      tags:
        - Messages
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Message details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    patch:
      summary: Update an existing message
      tags:
        - Messages
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      responses:
        '200':
          description: Message updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
    delete:
      summary: Delete a message
      tags:
        - Messages
      parameters:
        - name: messageId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Message deleted successfully

  /templates:
    post:
      summary: Create a new template
      tags:
        - Templates
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template'
      responses:
        '201':
          description: Template created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'

  /templates/{templateId}:
    get:
      summary: Retrieve a template
      tags:
        - Templates
      parameters:
        - name: templateId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Template details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
    put:
      summary: Update an existing template
      tags:
        - Templates
      parameters:
        - name: templateId
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Template'
      responses:
        '200':
          description: Template updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Template'
    delete:
      summary: Delete a template
      tags:
        - Templates
      parameters:
        - name: templateId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: Template deleted successfully

components:
  schemas:
    User:
      type: object
      required:
        - username
        - email
        - password
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
        password:
          type: string
  
    Buyer:
      type: object
      required:
        - userId
        - name
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        name:
          type: string
        registeredDate:
          type: string
          format: date

    Order:
      type: object
      properties:
        id:
          type: integer
          format: int64
        buyerId:
          type: integer
          format: int64
        orderDate:
          type: string
          format: date
        total:
          type: number
          format: float

    Item:
      type: object
      properties:
        id:
          type: integer
          format: int64
        orderId:
          type: integer
          format: int64
        itemName:
          type: string
        quantity:
          type: integer
        price:
          type: number
          format: float

    Message:
      type: object
      required:
        - userId
        - buyerId
        - templateId
        - customText
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        buyerId:
          type: integer
          format: int64
        templateId:
          type: integer
          format: int64
        customText:
          type: string
        timestamp:
          type: string
          format: date-time

    Template:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        text:
          type: string
        variables:
          type: string